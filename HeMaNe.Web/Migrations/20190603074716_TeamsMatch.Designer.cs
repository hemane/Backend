// <auto-generated />
using System;
using HeMaNe.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HeMaNe.Web.Migrations
{
    [DbContext(typeof(HemaneContext))]
    [Migration("20190603074716_TeamsMatch")]
    partial class TeamsMatch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HeMaNe.Web.Database.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("SportId");

                    b.HasKey("Id");

                    b.HasIndex("SportId");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DayId");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.MatchTeam", b =>
                {
                    b.Property<int>("TeamId");

                    b.Property<int>("MatchId");

                    b.Property<decimal>("Score");

                    b.HasKey("TeamId", "MatchId");

                    b.HasIndex("MatchId");

                    b.ToTable("MatchTeams");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClubId");

                    b.Property<int?>("LeagueId");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("LeagueId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.League", b =>
                {
                    b.HasOne("HeMaNe.Web.Database.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.Match", b =>
                {
                    b.HasOne("HeMaNe.Web.Database.Models.Day", "Day")
                        .WithMany()
                        .HasForeignKey("DayId");
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.MatchTeam", b =>
                {
                    b.HasOne("HeMaNe.Web.Database.Models.Match", "Match")
                        .WithMany("Teams")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HeMaNe.Web.Database.Models.Team", "Team")
                        .WithMany("Match")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HeMaNe.Web.Database.Models.Team", b =>
                {
                    b.HasOne("HeMaNe.Web.Database.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");

                    b.HasOne("HeMaNe.Web.Database.Models.League", "League")
                        .WithMany()
                        .HasForeignKey("LeagueId");
                });
#pragma warning restore 612, 618
        }
    }
}
